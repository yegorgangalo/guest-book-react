{"version":3,"sources":["redux/comments/comments-operations.js","redux/comments/comments-selectors.js","components/Context/Context.js","redux/comments/comments-actions.js","components/IconButton/IconButton.js","components/Spinner/Spinner.js","components/CommentItem/CommentItem.js","components/CommentList/CommentList.js","components/Modal/Modal.js","components/Form/Form.js","App.js","redux/comments/comments-reducer.js","redux/store.js","index.js","components/CommentItem/CommentItem.module.css","components/Form/Form.module.css","components/CommentList/CommentList.module.css","components/Modal/Modal.module.css","App.module.css","components/IconButton/IconButton.module.css","components/Spinner/Spinner.module.css"],"names":["axios","defaults","baseURL","fetchComments","createAsyncThunk","_","a","rejectWithValue","get","data","response","addComment","comment","post","deleteComment","id","delete","patchComment","patch","_id","getComments","state","comments","getLoading","loading","getError","error","getEdit","edit","createContext","editComment","createAction","IconButton","children","onClick","classNames","type","allyProps","className","styles","defaultProps","Spinner","s","iconSpin","CommentItem","name","useState","isEdit","setIsEdit","dispatch","useDispatch","toggleModal","useContext","Context","useSelector","useEffect","commentBlock","positionOfBtns","aria-label","colorBtn","spinner","CommentList","commentList","length","map","noComments","Modal","onEscCloseModal","useCallback","code","window","addEventListener","removeEventListener","createPortal","backdrop","target","currentTarget","content","document","querySelector","Form","editCommentInfo","useForm","handleSubmit","reset","setName","setComment","nameLS","localStorage","getItem","blockForm","autoComplete","onSubmit","setItem","formData","TextField","value","onChange","rowsMax","label","placeholder","multiline","variant","autoFocus","rows","Button","color","submitBtn","App","modal","setModal","val","mainContainer","Provider","toast","iconButtonCloseModal","autoClose","operations","createReducer","payload","fulfilled","filter","toggleLoading","reducerLoadingObj","Object","values","reduce","accObj","operation","rejected","pending","setError","status","config","request","statusText","method","responseURL","resetError","reducerErrorObj","combineReducers","store","configureStore","reducer","commentsReducer","devTools","process","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1a00a7a.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// axios.defaults.baseURL = 'https://guest-book-server.herokuapp.com';\naxios.defaults.baseURL = 'http://localhost:3003';\n\nexport const fetchComments = createAsyncThunk(\n    'comments/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      const {data} = await axios.get('/api/comments');\n        return data;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)\n\nexport const addComment = createAsyncThunk(\n    'comments/add',\n  async (comment, { rejectWithValue }) => {\n    try {\n      const {data} = await axios.post('/api/comments', comment);\n        return data;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)\n\nexport const deleteComment = createAsyncThunk(\n    'comments/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/api/comments/${id}`);\n        return id;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)\n\nexport const patchComment = createAsyncThunk(\n    'comments/patch',\n  async (comment, { rejectWithValue }) => {\n    try {\n      await axios.patch(`/api/comments/${comment._id}`, comment);\n      return comment;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)","export const getComments = state => state.comments.comments;\nexport const getLoading = state => state.comments.loading;\nexport const getError = state => state.comments.error;\nexport const getEdit = state => state.comments.edit;","import { createContext } from 'react';\n\nexport default createContext();","import { createAction } from '@reduxjs/toolkit';\n\nexport const editComment = createAction('comment/edit');","import PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nconst IconButton = ({ children, onClick, classNames=\"\", type=\"button\", ...allyProps }) => (\n  <button\n    type={type}\n    className={`${styles.IconButton} ${classNames}`}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;","import { ImSpinner2 } from 'react-icons/im';\nimport s from './Spinner.module.css'\n\nexport default function Spinner({classNames=\"\"}) {\n    return <ImSpinner2 className={`${s.iconSpin} ${classNames}`}/>;\n}","import {useContext, useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Context from 'components/Context';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { MdDelete } from 'react-icons/md';\nimport {deleteComment} from 'redux/comments/comments-operations';\nimport {editComment} from 'redux/comments/comments-actions';\nimport {getLoading, getComments} from 'redux/comments/comments-selectors';\nimport IconButton from 'components/IconButton';\nimport Spinner from 'components/Spinner';\nimport styles from './CommentItem.module.css'\n\nconst CommentItem = function ({ _id, name, comment }) {\n    const [isEdit, setIsEdit] = useState(false);\n    const dispatch = useDispatch();\n    const { toggleModal } = useContext(Context);\n    const loading = useSelector(getLoading);\n    const comments = useSelector(getComments);\n\n    useEffect(() => {\n        setIsEdit(false);\n    }, [comments])\n\n    const openEditModal = () => {\n        toggleModal();\n        const commentInfo = { _id, name, comment };\n        dispatch(editComment(commentInfo));\n        setIsEdit(true);\n    }\n\n    const deleteCommentById = () => {\n        dispatch(deleteComment(_id));\n        setIsEdit(true);\n    };\n\n\n    return (\n        <li className={styles.commentBlock} >\n            <p className={styles.name} >{name}:</p>\n            <p className={styles.comment} >{comment}</p>\n            <span className={styles.positionOfBtns}>\n                {loading && isEdit ?\n                    <IconButton aria-label=\"Loading\" classNames={styles.colorBtn}>\n                        <Spinner classNames={styles.spinner} />\n                    </IconButton>\n                : <>\n                    <IconButton onClick={openEditModal} aria-label=\"Edit Contact\" classNames={styles.colorBtn}>\n                        <FaRegEdit />\n                    </IconButton>\n                    <IconButton onClick={deleteCommentById} aria-label=\"Delete Contact\" classNames={styles.colorBtn}>\n                        <MdDelete />\n                    </IconButton>\n                </>}\n            </span>\n        </li>\n    )\n}\n\nexport default CommentItem;","import { useSelector } from 'react-redux';\nimport styles from './CommentList.module.css';\nimport CommentItem from 'components/CommentItem';\nimport { getComments } from 'redux/comments/comments-selectors';\n\nconst CommentList = function () {\n    const comments = useSelector(getComments);\n    return (\n        <ul className={styles.commentList} >\n            {comments.length>0\n                ? comments.map(({ _id, name, comment }) => (\n                <CommentItem key={_id} _id={_id} name={name} comment={comment} />\n                ))\n                : <li className={styles.noComments}>No Comments</li>\n            }\n        </ul>\n    )\n}\n\nexport default CommentList;","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nfunction Modal({ toggleModal, children }) {\n\n    const onEscCloseModal = useCallback(({ code }) => {\n        code === \"Escape\" && toggleModal()\n    },[toggleModal])\n\n    useEffect(() => {\n        window.addEventListener('keydown', onEscCloseModal);\n        return () => window.removeEventListener('keydown', onEscCloseModal);\n    }, [onEscCloseModal])\n\n    const onBackDropCloseModal = ({target, currentTarget}) => {\n        target===currentTarget && toggleModal()\n    }\n\n    return createPortal(\n        <div className={styles.backdrop} onClick={onBackDropCloseModal}>\n            <div className={styles.content}>{children}</div>\n        </div>\n    , document.querySelector('#modal-root'))\n}\n\nexport default Modal;","import { useEffect, useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEdit } from 'redux/comments/comments-selectors';\nimport { addComment, patchComment } from 'redux/comments/comments-operations';\nimport {editComment} from 'redux/comments/comments-actions';\nimport styles from './Form.module.css';\n\nexport default function Form({ toggleModal }) {\n    const dispatch = useDispatch();\n    const editCommentInfo = useSelector(getEdit);\n    const { handleSubmit, reset } = useForm();\n\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        if (editCommentInfo) {\n            setName(editCommentInfo.name);\n            setComment(editCommentInfo.comment);\n            return () => {\n                dispatch(editComment(null));\n            }\n        }\n        const nameLS = localStorage.getItem('name');\n        nameLS && setName(nameLS);\n    }, [editCommentInfo, dispatch])\n\n    const formSubmit = () => {\n        localStorage.setItem('name', name)\n        if (editCommentInfo) {\n            const formData = { _id: editCommentInfo._id, name, comment };\n            dispatch(patchComment(formData));\n            toggleModal();\n            reset();\n            return;\n        }\n        const formData = {name, comment};\n        dispatch(addComment(formData));\n        toggleModal();\n        reset();\n    }\n\n    const handleNameChange = ({target}) => {\n        setName(target.value);\n    }\n\n    const handleCommentChange = ({target}) => {\n        setComment(target.value);\n    }\n\n    return (\n        <form className={styles.blockForm} autoComplete=\"on\" onSubmit={handleSubmit(formSubmit)}>\n            <TextField\n                value={name}\n                onChange={handleNameChange}\n                rowsMax={1}\n                label=\"Your Name\"\n                placeholder=\"Antonio\"\n                multiline\n                variant=\"outlined\"\n                className={styles.name}\n                autoFocus\n            />\n            <TextField\n                value={comment}\n                onChange={handleCommentChange}\n                rows={5}\n                rowsMax={10}\n                label=\"Your comment\"\n                placeholder=\"I like your service very much!\"\n                multiline\n                variant=\"outlined\"\n                className={styles.comment}\n            />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={styles.submitBtn} >Add</Button>\n        </form>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchComments } from 'redux/comments/comments-operations';\nimport { getLoading, getError } from 'redux/comments/comments-selectors';\nimport { Button } from '@material-ui/core';\nimport { IoClose } from 'react-icons/io5';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Context from 'components/Context';\nimport CommentList from 'components/CommentList';\nimport Modal from 'components/Modal';\nimport Form from 'components/Form';\nimport IconButton from 'components/IconButton';\nimport Spinner from 'components/Spinner';\nimport styles from './App.module.css';\n\n\nfunction App() {\n  const [modal, setModal] = useState(false);\n  const dispatch = useDispatch();\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchComments());\n  }, [dispatch])\n\n  const toggleModal = () => {\n    return setModal(!modal);\n  }\n\n  const notify = (val) => {\n    toast(val);\n  };\n\n  return (\n    <div className={styles.mainContainer} >\n      <h1>Our visitor's comments</h1>\n      <Context.Provider value={{toggleModal}}>\n        <CommentList />\n      </Context.Provider>\n      {loading && <Spinner />}\n      {error && notify(error)}\n      <Button type=\"button\" color=\"primary\" variant=\"contained\" onClick={toggleModal}>Leave Comment</Button>\n      {modal &&\n        <Modal toggleModal={toggleModal}>\n        <Form toggleModal={toggleModal}/>\n          <IconButton onClick={toggleModal} aria-label=\"Close Modal\" classNames={styles.iconButtonCloseModal}>\n            <IoClose/>\n          </IconButton>\n        </Modal>}\n      <ToastContainer autoClose={3000}/>\n    </div>\n  )\n}\n\nexport default App;\n","import { createReducer, combineReducers} from '@reduxjs/toolkit';\nimport * as operations from './comments-operations';\nimport {editComment} from './comments-actions';\n\nconst { fetchComments, addComment, deleteComment, patchComment } = operations;\n\n/* ---------------EDITCOMMENT_REDUCER---------------------- */\nconst edit = createReducer(null, {\n    [editComment]: (_, { payload }) => payload,\n    [patchComment.fulfilled]: () => null,\n})\n\n/* ---------------FULLFILLED_REDUCER---------------------- */\nconst comments = createReducer([], {\n    [addComment.fulfilled]: (state, { payload }) => [...state, payload],\n    [fetchComments.fulfilled]: (_, { payload }) => payload,\n    [deleteComment.fulfilled]: (state, { payload }) => state.filter(({ _id }) => _id !== payload),\n    [patchComment.fulfilled]: (state, { payload }) => state.map(comment => comment._id === payload._id ? payload : comment),\n});\n\n/* ---------------LOAD_REDUCER---------------------- */\nconst toggleLoading = (state) => !state;\nconst reducerLoadingObj = Object.values(operations)\n    .reduce((accObj, operation) =>\n        ({\n            ...accObj,\n            [operation.fulfilled]: toggleLoading,\n            [operation.rejected]: toggleLoading,\n            [operation.pending]: toggleLoading\n        }), {});\nconst loading = createReducer(false, reducerLoadingObj);\n\n/* ---------------ERROR_REDUCER---------------------- */\nconst setError = (_, { payload }) => {\n    const { status,config,request,statusText} = payload;\n    return `Error ${status}. Can't ${config.method} by ${request.responseURL}. ${statusText}`;\n};\nconst resetError = () => null;\nconst reducerErrorObj = Object.values(operations)\n    .reduce((accObj, operation) =>\n        ({\n            ...accObj,\n            [operation.rejected]: setError,\n            [operation.pending]: resetError\n        }), {});\nconst error = createReducer(null, reducerErrorObj);\n\n/* ---------------------------------------------------- */\n\nexport default combineReducers({\n    comments,\n    loading,\n    error,\n    edit\n});","import { configureStore } from '@reduxjs/toolkit';\nimport commentsReducer from './comments/comments-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    comments: commentsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentBlock\":\"CommentItem_commentBlock__3GHYj\",\"name\":\"CommentItem_name__1YCHw\",\"comment\":\"CommentItem_comment__1Y7mo\",\"positionOfBtns\":\"CommentItem_positionOfBtns__awu8x\",\"colorBtn\":\"CommentItem_colorBtn__hIuw1\",\"spinner\":\"CommentItem_spinner__2EQDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Form_name__34-ms\",\"comment\":\"Form_comment__azIWT\",\"submitBtn\":\"Form_submitBtn__3Vmc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentList\":\"CommentList_commentList__1JmLH\",\"noComments\":\"CommentList_noComments__2Iezb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"content\":\"Modal_content__1VIbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__2o5r7\",\"iconButtonCloseModal\":\"App_iconButtonCloseModal__1jvOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__3sU0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSpin\":\"Spinner_iconSpin__DshYl\",\"icon-spin\":\"Spinner_icon-spin__3WqPZ\"};"],"sourceRoot":""}