{"version":3,"sources":["redux/comments/comments-operations.js","redux/comments/comments-selectors.js","components/CommentItem/CommentItem.js","components/CommentList/CommentList.js","components/Modal/Modal.js","components/Form/Form.js","components/IconButton/IconButton.js","components/Spinner/Spinner.js","App.js","redux/comments/comments-reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/CommentItem/CommentItem.module.css","components/CommentList/CommentList.module.css","components/Modal/Modal.module.css","App.module.css","components/IconButton/IconButton.module.css","components/Spinner/Spinner.module.css"],"names":["axios","defaults","baseURL","fetchComments","createAsyncThunk","_","a","rejectWithValue","get","data","response","addComment","comment","post","getComments","state","comments","getLoading","loading","getError","error","CommentItem","name","className","styles","commentBlock","CommentList","useSelector","commentList","length","map","_id","noComments","Modal","toggleModal","children","onEscCloseModal","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","backdrop","onClick","target","currentTarget","content","document","querySelector","Form","dispatch","useDispatch","useForm","handleSubmit","reset","control","useState","setName","nameLS","localStorage","getItem","handleChange","value","blockForm","autoComplete","onSubmit","setItem","formData","defaultValue","render","field","TextField","onChange","rowsMax","label","placeholder","multiline","variant","autoFocus","rows","Button","type","color","submitBtn","IconButton","classNames","allyProps","defaultProps","Spinner","s","iconSpin","App","modal","setModal","val","mainContainer","toast","aria-label","iconButtonCloseModal","autoClose","operations","createReducer","fulfilled","payload","toggleLoading","reducerLoadingObj","Object","values","reduce","accObj","operation","rejected","pending","setError","status","config","request","statusText","method","responseURL","resetError","reducerErrorObj","combineReducers","store","configureStore","reducer","commentsReducer","devTools","process","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.deb68ba5.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://guest-book-server.herokuapp.com';\n\nexport const fetchComments = createAsyncThunk(\n    'comments/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      const {data} = await axios.get('/comments');\n        return data;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)\n\nexport const addComment = createAsyncThunk(\n    'comments/add',\n  async (comment, { rejectWithValue }) => {\n    try {\n      const {data} = await axios.post('/comments', comment);\n        return data;\n    } catch (error) {\n      return rejectWithValue(error.response)\n    }\n  }\n)","export const getComments = state => state.comments.comments;\nexport const getLoading = state => state.comments.loading;\nexport const getError = state => state.comments.error;","import styles from './CommentItem.module.css'\n\nconst CommentItem = function({name, comment}) {\n    return (\n        <li className={styles.commentBlock} >\n            <p className={styles.name} >{name}:</p>\n            <p className={styles.comment} >{comment}</p>\n        </li>\n    )\n}\n\nexport default CommentItem;","import { useSelector } from 'react-redux';\nimport styles from './CommentList.module.css';\nimport CommentItem from 'components/CommentItem';\nimport { getComments } from 'redux/comments/comments-selectors';\n\nconst CommentList = function () {\n    const comments = useSelector(getComments);\n    return (\n        <ul className={styles.commentList} >\n            {comments.length>0\n                ? comments.map(({ _id, name, comment }) => (\n                <CommentItem key={_id} name={name} comment={comment} />\n                ))\n                : <li className={styles.noComments}>No Comments</li>\n            }\n        </ul>\n    )\n}\n\nexport default CommentList;","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nfunction Modal({ toggleModal, children }) {\n\n    const onEscCloseModal = useCallback(({ code }) => {\n        code === \"Escape\" && toggleModal()\n    },[toggleModal])\n\n    useEffect(() => {\n        window.addEventListener('keydown', onEscCloseModal);\n        return () => window.removeEventListener('keydown', onEscCloseModal);\n    }, [onEscCloseModal])\n\n    const onBackDropCloseModal = ({target, currentTarget}) => {\n        target===currentTarget && toggleModal()\n    }\n\n    return createPortal(\n        <div className={styles.backdrop} onClick={onBackDropCloseModal}>\n            <div className={styles.content}>{children}</div>\n        </div>\n    , document.querySelector('#modal-root'))\n}\n\nexport default Modal;","import { useEffect, useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useDispatch } from 'react-redux';\nimport { addComment } from 'redux/comments/comments-operations';\nimport styles from './Form.module.css';\n\nexport default function Form({ toggleModal }) {\n    const dispatch = useDispatch();\n    const dispatchAsyncComment = (value) => dispatch(addComment(value));\n    const { handleSubmit, reset, control } = useForm();\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        const nameLS = localStorage.getItem('name');\n        nameLS && setName(nameLS);\n    }, [])\n\n    const formSubmit = (data) => {\n        localStorage.setItem('name', name)\n        const formData = { ...data, name };\n        dispatchAsyncComment(formData);\n        toggleModal();\n        reset();\n    }\n\n    const handleChange = ({target}) => {\n        setName(target.value);\n    };\n\n    return (\n        <form className={styles.blockForm} autoComplete=\"on\" onSubmit={handleSubmit(formSubmit)}>\n            <Controller\n                name=\"name\"\n                control={control}\n                defaultValue=\"\"\n                render={({field}) =>\n                    <TextField\n                        {...field}\n                        value={name}\n                        onChange={handleChange}\n                        rowsMax={1}\n                        label=\"Your Name\"\n                        placeholder=\"Antonio\"\n                        multiline\n                        variant=\"outlined\"\n                        className={styles.name}\n                        autoFocus\n                    />}\n            />\n            <Controller\n                name=\"comment\"\n                control={control}\n                defaultValue=\"\"\n                render={({field}) =>\n                    <TextField\n                        {...field}\n                        rows={5}\n                        rowsMax={10}\n                        label=\"Your comment\"\n                        placeholder=\"I like your service very much!\"\n                        multiline\n                        variant=\"outlined\"\n                        className={styles.comment}\n                    />}\n            />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={styles.submitBtn} >Add</Button>\n        </form>\n    )\n}","import PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nconst IconButton = ({ children, onClick, classNames=\"\", type=\"button\", ...allyProps }) => (\n  <button\n    type={type}\n    className={`${styles.IconButton} ${classNames}`}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;","import { ImSpinner2 } from 'react-icons/im';\nimport s from './Spinner.module.css'\n\nexport default function Spinner({classNames=\"\"}) {\n    return <ImSpinner2 className={`${s.iconSpin} ${classNames}`}/>;\n}","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchComments } from 'redux/comments/comments-operations';\nimport { getLoading, getError } from 'redux/comments/comments-selectors';\nimport { Button } from '@material-ui/core';\nimport { IoClose } from 'react-icons/io5';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CommentList from 'components/CommentList';\nimport Modal from 'components/Modal';\nimport Form from 'components/Form';\nimport IconButton from 'components/IconButton';\nimport Spinner from 'components/Spinner';\nimport styles from './App.module.css';\n\n\nfunction App() {\n  const [modal, setModal] = useState(false);\n  const dispatch = useDispatch();\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchComments());\n  }, [dispatch])\n\n  const toggleModal = () => {\n    return setModal(!modal);\n  }\n\n  const notify = (val) => {\n    toast(val);\n  };\n\n  return (\n    <div className={styles.mainContainer} >\n      <h1>Our visitor's comments</h1>\n      <CommentList />\n      {loading && <Spinner />}\n      {error && notify(error)}\n      <Button type=\"button\" color=\"primary\" variant=\"contained\" onClick={toggleModal}>Leave Comment</Button>\n      {modal &&\n        <Modal toggleModal={toggleModal}>\n        <Form toggleModal={toggleModal}/>\n          <IconButton onClick={toggleModal} aria-label=\"Close Modal\" classNames={styles.iconButtonCloseModal}>\n            <IoClose/>\n          </IconButton>\n        </Modal>}\n      <ToastContainer autoClose={3000}/>\n    </div>\n  )\n}\n\nexport default App;\n","import { createReducer, combineReducers} from '@reduxjs/toolkit';\nimport * as operations from './comments-operations';\n\nconst { fetchComments, addComment } = operations;\n\n/* ---------------FULLFILLED_REDUCER---------------------- */\nconst comments = createReducer([], {\n    [addComment.fulfilled]: (state, { payload }) => [...state, payload],\n    [fetchComments.fulfilled]: (_, { payload }) => payload,\n});\n\n/* ---------------LOAD_REDUCER---------------------- */\nconst toggleLoading = (state) => !state;\nconst reducerLoadingObj = Object.values(operations)\n    .reduce((accObj, operation) =>\n        ({\n            ...accObj,\n            [operation.fulfilled]: toggleLoading,\n            [operation.rejected]: toggleLoading,\n            [operation.pending]: toggleLoading\n        }), {});\nconst loading = createReducer(false, reducerLoadingObj);\n\n/* ---------------ERROR_REDUCER---------------------- */\nconst setError = (_, { payload }) => {\n    const { status,config,request,statusText} = payload;\n    return `Error ${status}. Can't ${config.method} by ${request.responseURL}. ${statusText}`;\n};\nconst resetError = () => null;\nconst reducerErrorObj = Object.values(operations)\n    .reduce((accObj, operation) =>\n        ({\n            ...accObj,\n            [operation.rejected]: setError,\n            [operation.pending]: resetError\n        }), {});\nconst error = createReducer(null, reducerErrorObj);\n/* ---------------------------------------------------- */\n\nexport default combineReducers({\n    comments,\n    loading,\n    error,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport commentsReducer from './comments/comments-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    comments: commentsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Form_name__34-ms\",\"comment\":\"Form_comment__azIWT\",\"submitBtn\":\"Form_submitBtn__3Vmc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentBlock\":\"CommentItem_commentBlock__3GHYj\",\"name\":\"CommentItem_name__1YCHw\",\"comment\":\"CommentItem_comment__1Y7mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentList\":\"CommentList_commentList__1JmLH\",\"noComments\":\"CommentList_noComments__2Iezb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"content\":\"Modal_content__1VIbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__2o5r7\",\"iconButtonCloseModal\":\"App_iconButtonCloseModal__1jvOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__3sU0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSpin\":\"Spinner_iconSpin__DshYl\",\"icon-spin\":\"Spinner_icon-spin__3WqPZ\"};"],"sourceRoot":""}